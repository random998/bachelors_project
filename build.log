error[E0432]: unresolved import `crate::poker::PlayerCards`
 --> crates/core/src/game_state.rs:7:26
  |
7 |     poker::{Card, Chips, PlayerCards, TableId},
  |                          ^^^^^^^^^^^
  |                          |
  |                          no `PlayerCards` in `poker`
  |                          help: a similar name exists in the module: `PlayersCards`

error[E0432]: unresolved import `crate::poker::PlayerCards`
  --> crates/core/src/message.rs:10:26
   |
10 |     poker::{Card, Chips, PlayerCards, TableId},
   |                          ^^^^^^^^^^^
   |                          |
   |                          no `PlayerCards` in `poker`
   |                          help: a similar name exists in the module: `PlayersCards`

error[E0432]: unresolved import `eval`
 --> crates/core/src/poker.rs:7:9
  |
7 | pub use eval::{HandRank, HandValue};
  |         ^^^^ help: a similar path exists: `poker_eval::eval`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `digest`
  --> crates/core/src/crypto.rs:21:32
   |
21 | type SignatureHasher = Blake2s<digest::consts::U32>;
   |                                ^^^^^^ use of unresolved module or unlinked crate `digest`
   |
   = help: if you wanted to use a crate named `digest`, use `cargo add digest` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `digest`
   --> crates/core/src/crypto.rs:115:36
    |
115 |         let mut hasher = Blake2s::<digest::consts::U16>::new();
    |                                    ^^^^^^ use of unresolved module or unlinked crate `digest`
    |
    = help: if you wanted to use a crate named `digest`, use `cargo add digest` to add it to your `Cargo.toml`

error[E0433]: failed to resolve: use of unresolved module or unlinked crate `digest`
   --> crates/core/src/crypto.rs:129:24
    |
129 | pub struct PeerId([u8; digest::consts::U16::INT]);
    |                        ^^^^^^ use of unresolved module or unlinked crate `digest`
    |
    = help: if you wanted to use a crate named `digest`, use `cargo add digest` to add it to your `Cargo.toml`
help: there is an enum variant `serde::__private::de::Content::U16`; try using the variant's enum
    |
129 - pub struct PeerId([u8; digest::consts::U16::INT]);
129 + pub struct PeerId([u8; serde::__private::de::Content::INT]);
    |

